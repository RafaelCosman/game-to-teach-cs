// Generated by CoffeeScript 1.6.3
(function() {
  var $, computeAngleFromParent, dist;

  dist = function(x, y) {
    return Math.sqrt(x * x + y * y);
  };

  /* --------------------------------------------
       Begin logicBoxGame.coffee
  --------------------------------------------
  */


  $ = jQuery;

  $(function() {
    var i, j, _i, _j;
    for (i = _i = 0; _i < 3; i = ++_i) {
      ($("#gridTable>tbody")).append("<tr>");
      for (j = _j = 0; _j < 3; j = ++_j) {
        ($("#gridTable>tbody")).append("<td><div class=\"gridCell\"></div></td>");
      }
      ($("#gridTable>tbody")).append("</tr>");
      ($(".gridCell,.toolBox")).droppable({
        hoverClass: "drop-hover",
        accept: ".logicBox",
        drop: (function(ev, ui) {
          ui.draggable.parent().removeClass("filled");
          ui.draggable.detach();
          ui.draggable.appendTo($(this));
          ui.draggable.offset({
            left: ($(this)).offset().left + 9,
            top: ($(this)).offset().top + 9
          });
          return ($(this)).addClass("filled");
        })
      });
    }
    ($(".logicBox")).draggable({});
    ($(".logicBoxArrow")).draggable({
      drag: function(ev, ui) {
        var angle, distance, parent;
        parent = ui.helper.parent();
        angle = computeAngleFromParent(ui);
        distance = 50;
        ui.position.left = Math.cos(angle) * -distance + parent.width() / 2 - ui.helper.width() / 2;
        return ui.position.top = Math.sin(angle) * -distance + parent.height() / 2 - ui.helper.height() / 2;
      },
      stop: function(ev, ui) {
        var angle, distance, parent;
        parent = ui.helper.parent();
        angle = computeAngleFromParent(ui);
        distance = 50;
        angle = Math.round(angle * 4 / (2 * Math.PI)) / (4 / (2 * Math.PI));
        ui.helper.css({
          left: Math.cos(angle) * -distance + parent.width() / 2 - ui.helper.width() / 2
        });
        return ui.helper.css({
          top: Math.sin(angle) * -distance + parent.height() / 2 - ui.helper.height() / 2
        });
      }
    });
    return ($(".logicBoxArrow")).offset({
      top: 20 + $(this).parent().offset.top,
      left: $(this).parent().offset.left
    });
  });

  computeAngleFromParent = function(ui) {
    var angle, dx, dy, parent;
    parent = ui.helper.parent();
    dx = ui.position.left - (parent.width() / 2 - ui.helper.width() / 2);
    dy = ui.position.top - (parent.height() / 2 - ui.helper.height() / 2);
    angle = Math.atan(dy / dx);
    if (dx > 0) {
      angle += Math.PI;
    }
    return angle;
  };

}).call(this);
